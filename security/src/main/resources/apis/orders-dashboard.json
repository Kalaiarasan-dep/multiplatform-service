{
  "select": {
    "useDefaultAlways" : true,
    "default": {
      "query": "with dashboard as (SELECT sum(case when o.status_id in (3,4,13,6,5) then claimed_amount else 0 end) Total_Order_Received,sum(case when o.status_id in (3,4,13,6,5) then 1 else 0 end) Total_Order_Received_count,\n \ncount(distinct case when partner_id is not null and o.status_id in (3,4,13,6,5) then o.partner_id end) Total_Partner_Count,\n \nsum(case when o.status_id=4 then claimed_amount else 0 end)  Waiting_for_Apporval_amount,\n \nsum(case when o.status_id=4 then 1 else 0 end)  Waiting_for_Apporval_count,\n \ncount(distinct case when o.status_id=4 and partner_id is not null then o.partner_id end) Waiting_for_Apporval_Partner_Count,\n \nsum(case when o.status_id in (3,14,10,12,8) then claimed_amount else 0 end)  Approved_amount,sum(case when o.status_id in (3,14,10,12,8) then 1 else 0 end)  \n \nApproved_count, count(distinct case when o.status_id in (3,14,10,12,8) and partner_id is not null then o.partner_id end) Approved_Partner_Count,\n \nsum(case when o.status_id=13 then claimed_amount else 0 end)  Reference_ID_does_not_exists_amount,sum(case when o.status_id=13\n \nthen 1 else 0 end)  Reference_ID_does_not_exists_count, count(distinct case when o.status_id=13 and partner_id is not null then o.partner_id end)\n \nReference_ID_does_not_exists_Partner_Count, sum(case when o.status_id=5 then claimed_amount else 0 end)\n \nOnHold_amount,sum(case when o.status_id=5 then 1 else 0 end)  OnHold_count, count(distinct case when o.status_id=5 and partner_id is not null then o.partner_id end) OnHold_Partner_Count, sum(case when o.status_id=6 then claimed_amount else 0 end)\n \nRejected_amount,sum(case when o.status_id=6 then 1 else 0 end)  Rejected_count, count(distinct case when o.status_id=6 and partner_id is not null then o.partner_id end) Rejected_Partner_Count   FROM omo.order o inner join bulk_upload_file buf  \n \non buf.id=o.bulk_upload_file_id inner join user u on u.id=buf.user_id inner join user_performs_role upr\n \non upr.user_id=u.id and role_id=1 where u.id=:userid) select json_object ('totalOrderReceived',round(Total_Order_Received,2),\n \n'totalOrderReceivedCount',Total_Order_Received_count, 'totalPartnerCount',Total_Partner_Count, 'waitingForApporvalAmount',\n \nround(Waiting_for_Apporval_amount,2),'waitingForApporvalCount',Waiting_for_Apporval_count, 'approvedAmount',\n \nround(Approved_amount,2),'approvedCount',Approved_count,'referenceIDdoesNotExistsAmount',\n \nround(Reference_ID_does_not_exists_amount,2),'referenceIDdoesNotExistsCount',\n \nReference_ID_does_not_exists_count, 'onHoldAmount',round(OnHold_amount,2),'onHoldCount',\n \nOnHold_count,'rejectedAmount',round(Rejected_amount,2),'rejectedCount',Rejected_count, 'waitingForApporvalPartnerCount',\n \nWaiting_for_Apporval_Partner_Count,'approvedPartnerCount',Approved_Partner_Count, 'referenceIDdoesNotExistsPartnerCount',\n \nReference_ID_does_not_exists_Partner_Count,'onHoldPartnerCount', OnHold_Partner_Count,'rejectedPartnerCount',\n \nRejected_Partner_Count   ) data from dashboard ",
      "postProcessor": "dashboardPostProcessor"
    },
    "default_SUPER_ADMIN": {
      "query": "with dashboard as (SELECT sum(case when o.status_id in (3,4,13,6,5,14,7,10,11,8) then claimed_amount else 0 end) Total_Order_Received,sum(case when o.status_id in (3,4,13,6,5,14,7,10,11,8) then 1 else 0 end) Total_Order_Received_count,\n \ncount(distinct case when partner_id is not null and o.status_id in (3,4,13,6,5,14,7,10,11,8) then o.partner_id end) Total_Partner_Count,\n \nsum(case when o.status_id=4 then claimed_amount else 0 end)  Waiting_for_Apporval_amount,\n \nsum(case when o.status_id=4 then 1 else 0 end)  Waiting_for_Apporval_count,\n \ncount(distinct case when o.status_id=4 and partner_id is not null then o.partner_id end) Waiting_for_Apporval_Partner_Count,\n \nsum(case when o.status_id in (3,14,10,8,7,11) then claimed_amount else 0 end)  Approved_amount,sum(case when o.status_id in (3,14,10,8,7,11) then 1 else 0 end)  \n \nApproved_count, count(distinct case when o.status_id in (3,14,10,8,7,11) and partner_id is not null then o.partner_id end) Approved_Partner_Count,\n \nsum(case when o.status_id=13 then claimed_amount else 0 end)  Reference_ID_does_not_exists_amount,sum(case when o.status_id=13\n \nthen 1 else 0 end)  Reference_ID_does_not_exists_count, count(distinct case when o.status_id=13 and partner_id is not null then o.partner_id end)\n \nReference_ID_does_not_exists_Partner_Count, sum(case when o.status_id=5 then claimed_amount else 0 end)\n \nOnHold_amount,sum(case when o.status_id=5 then 1 else 0 end)  OnHold_count, count(distinct case when o.status_id=5 and partner_id is not null then o.partner_id end) OnHold_Partner_Count, sum(case when o.status_id=6 then claimed_amount else 0 end)\n \nRejected_amount,sum(case when o.status_id=6 then 1 else 0 end)  Rejected_count, count(distinct case when o.status_id=6 and partner_id is not null then o.partner_id end) Rejected_Partner_Count   FROM omo.order o inner join bulk_upload_file buf  \n \non buf.id=o.bulk_upload_file_id inner join user u on u.id=buf.user_id inner join user_performs_role upr\n \non upr.user_id=u.id and role_id=1 where u.id=:userid) select json_object ('totalOrderReceived',round(Total_Order_Received,2),\n \n'totalOrderReceivedCount',Total_Order_Received_count, 'totalPartnerCount',Total_Partner_Count, 'waitingForApporvalAmount',\n \nround(Waiting_for_Apporval_amount,2),'waitingForApporvalCount',Waiting_for_Apporval_count, 'approvedAmount',\n \nround(Approved_amount,2),'approvedCount',Approved_count,'referenceIDdoesNotExistsAmount',\n \nround(Reference_ID_does_not_exists_amount,2),'referenceIDdoesNotExistsCount',\n \nReference_ID_does_not_exists_count, 'onHoldAmount',round(OnHold_amount,2),'onHoldCount',\n \nOnHold_count,'rejectedAmount',round(Rejected_amount,2),'rejectedCount',Rejected_count, 'waitingForApporvalPartnerCount',\n \nWaiting_for_Apporval_Partner_Count,'approvedPartnerCount',Approved_Partner_Count, 'referenceIDdoesNotExistsPartnerCount',\n \nReference_ID_does_not_exists_Partner_Count,'onHoldPartnerCount', OnHold_Partner_Count,'rejectedPartnerCount',\n \nRejected_Partner_Count   ) data from dashboard ",
      "postProcessor": "dashboardPostProcessor"

    },
    "default_PARTNER": {
      "query": "with dashboard as (SELECT sum(case when o.status_id in (4,13,6,5) then claimed_amount else 0 end) Total_Order_Received,\nsum(case when o.status_id in (4,13,6,5) then 1 else 0 end) Total_Order_Received_count, \nsum(case when o.status_id=4 then claimed_amount else 0 end)  Waiting_for_Apporval_amount,\nsum(case when o.status_id=4 then 1 else 0 end)  Waiting_for_Apporval_count, sum(case when o.status_id in (3,14,10,8,7,11) \nthen claimed_amount else 0 end)  Approved_amount,sum(case when o.status_id in (3,14,10,8,7,11) then 1 else 0 end)  Approved_count, \nsum(case when o.status_id=13 then claimed_amount else 0 end)  Reference_ID_does_not_exists_amount,\nsum(case when o.status_id=13 then 1 else 0 end)  Reference_ID_does_not_exists_count, sum(case when o.status_id=5 \nthen claimed_amount else 0 end)  OnHold_amount,sum(case when o.status_id=5 then 1 else 0 end)  OnHold_count,\nsum(case when o.status_id=6 then claimed_amount else 0 end)  Rejected_amount,sum(case when o.status_id=6 then 1 else 0 end)  \nRejected_count   FROM omo.order o inner join partner_has_user phu  on phu.partner_id=o.partner_id inner join\nuser u on u.id=phu.user_id  where u.id=:userid) select json_object ('totalOrderReceived',round(Total_Order_Received,2),\n'totalOrderReceivedCount',Total_Order_Received_count, 'waitingForApporvalAmount',round(Waiting_for_Apporval_amount,2),\n'waitingForApporvalCount',Waiting_for_Apporval_count, 'approvedAmount',round(Approved_amount,2),'approvedCount',Approved_count,\n'referenceIDdoesNotExistsAmount', round(Reference_ID_does_not_exists_amount,2),'referenceIDdoesNotExistsCount',\nReference_ID_does_not_exists_count, 'onHoldAmount',round(OnHold_amount,2),'onHoldCount',OnHold_count,'rejectedAmount',\nround(Rejected_amount,2),'rejectedCount',Rejected_count ) data from dashboard ",
      "postProcessor": "dashboardPostProcessor"
    },
    "suportRoleBasedQueries": true
  }
}